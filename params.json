{"name":"Data-uri-to-img-url","tagline":"This service takes a Base64 encoded DataURI via a POST request, and responds with a URL representing the decoded image.","body":"data-uri-to-img-url\r\n===================\r\n\r\nThis service takes a Base64 encoded DataURI via a POST request, and responds with a URL representing the decoded image. It's useful as a Javascript API to take a screenshot of an HTML5 canvas and convert it to a URL that can then be shared on social networks.\r\n\r\nThe way we originally envisioned using this was for a project that generated custom canvas images. We wanted to share a screenshot of the canvas on Facebook. So we used this in combination with the following project to convert the canvas to an image and wrap it in a page with opengraph META tags in real time. See the following complementing project:\r\n\r\nhttps://github.com/aminariana/opengraph-meta-describer\r\n\r\n\r\nLive production instance\r\n------------------------\r\n\r\nThe main production instance for your use:\r\n- http://data-uri-to-img-url.herokuapp.com\r\n\r\nDocumentation\r\n-------------\r\n\r\nAuthor:\r\n- http://www.aminariana.com\r\n\r\nDocumentation site:\r\n- TBD\r\n\r\nThe main API is the following path, used in POST requests:\r\n- http://data-uri-to-img-url.herokuapp.com/images.json\r\n\r\n**The POST request parameters accepted:**\r\n- 'image[data_uri]': The 64 bit encoded string representing the image\r\n\r\n**The expected response:**\r\nA JSON response containing a URL to the decoded image. For example:\r\n```\r\n{ url: 'http://data-uri-to-img-url.herokuapp.com/AdLtqeN_DJc' }\r\n```\r\n\r\nMotivation and Benefits\r\n-----------------------\r\nWhen you have a custom HTML5 canvas, you can use this project to convert the DataURI (the 64 bit JS-serialized screenshot of the canvas) to a globally reachable Image URL.\r\n\r\nExample\r\n-------\r\nFor some reason you've 64-bit encoded an HTML5 canvas rendering of President Obama giving a speech, using Javascript:\r\n\r\n```\r\nvar img_uri= canvas.toDataURL(\"image/png\");\r\n```\r\n\r\nYes, you can render this as an IMG tag within the same app. But how would you, say, share it on Facebook? You'd need to convert it to a URL first:\r\n\r\n```\r\n  # Make a POST request to 'http://data-uri-to-img-url.herokuapp.com/images.json' with param 'image[data_uri]' set to the above DataURI input.\r\n  # This could be from an HTML form with a textarea, or programmatically using an AJAX POST request.\r\n```\r\n\r\nThe result:\r\n\r\n```\r\n{ url: 'http://data-uri-to-img-url.herokuapp.com/AdLtqeN_DJc' }\r\n```\r\n\r\nLicense\r\n-------\r\nMIT License. Use with credit and care.\r\n\r\ni.e.:\r\n![Rendered Image](http://data-uri-to-img-url.herokuapp.com/AdLtqeN_DJc)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}